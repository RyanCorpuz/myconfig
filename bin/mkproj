#!/usr/bin/sh

# ------------------------------------------------
# [Ryan Corpuz]	
# NAME
#		mkproj	-	Create a local project folder
#
# SYNOPSIS
#		mkproj [OPTION] [PROJECT NAME]
#
# DESCRIPTION
#		Creates a local project folder (within current directory by default).
#
#		-g
#			creates github repo for project within the local parent folder created
#
#		-gp
#			creates a private github repo for project within the local parent project folder created
#
#		See gitproj script for github setup and details
# ------------------------------------------------

proj_path=.
package=mkproj
sigdig=2

if [ -z $1 ]; then
	echo "mkproj: missing operand"
	exit 1
fi

while test $# -gt 0; do
	case "$1" in
		-h|--help)
			echo "$package - "
			echo " "
			echo "$package [OPTIONS] [PROJECT NAME]"
			echo " "
			echo "Options:"
			echo " -h, --help			show brief help"
      		echo " -g, 					initialize github repo"
      		echo " -gp, 					initialize github repo and set repo to be private"
      		exit 0
      		;;
    	-g)
			shift
    	  	if test $# -gt 0; then
				local=$1
				rungit() {
					gitproj $local
				}
    	  	else
				echo "no name specified"
    	  	  	exit 1
    	  	fi
    	  	shift
    	  	;;
		-gp)
			shift
    	  	if test $# -gt 0; then
				local=$1
				rungit() {
					gitproj -p $local
				}
    	  	else
				echo "no name specified"
    	  	  	exit 1
    	  	fi
    	  	shift
    	  	;;
    	*)
			local=$1
			rungit() {
				:
			}
			break
    	  	;;
	esac
done

# Create directory and changes into directory
mkcd () {
	mkdir "$1" && cd "$1"
}

### Create Parent Directory
cd $proj_path
num_proj=$(ls -F | grep / | wc -l)
delta=$(( $sigdig - ${#num_proj} ))
string=""
zer="0"

if [ $delta -gt 0 ]; then
	for i in {1..$delta}; do string="${string}${zer}"; done
fi
num_str="${string}${num_proj}"
dirname="${num_str}_${local}"
mkcd "$dirname"

notes_str="NAME:\t\t${local}\nPROJECT#:\t${num_str}\nDATE:\t\t${cdate}\n\nOVERVIEW:\n"
touch notes
echo "$notes_str" >> notes
rungit
